//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Sanoid.Schema;
public readonly partial struct Schema
{
    public readonly partial struct MonitoringEntity
    {
        /// <summary>
        /// A type generated from a JsonSchema specification.
        /// </summary>
        public readonly partial struct AdditionalPropertiesEntity
        {
            /// <summary>
            /// Conversion from <see cref = "Sanoid.Schema.SanoidMonitoringSchemaJson"/>.
            /// </summary>
            /// <param name = "value">The value from which to convert.</param>
            public static implicit operator AdditionalPropertiesEntity(Sanoid.Schema.SanoidMonitoringSchemaJson value)
            {
                if (value.HasJsonElementBacking)
                {
                    return new(value.AsJsonElement);
                }

                return value.ValueKind switch
                {
                    JsonValueKind.Object => new((ImmutableDictionary<JsonPropertyName, JsonAny>)value),
                    _ => Undefined
                };
            }

            /// <summary>
            /// Conversion to <see cref = "Sanoid.Schema.SanoidMonitoringSchemaJson"/>.
            /// </summary>
            /// <param name = "value">The value from which to convert.</param>
            public static implicit operator Sanoid.Schema.SanoidMonitoringSchemaJson(AdditionalPropertiesEntity value)
            {
                if ((value.backing & Backing.JsonElement) != 0)
                {
                    return new(value.AsJsonElement);
                }

                if ((value.backing & Backing.Object) != 0)
                {
                    return new(value.objectBacking);
                }

                return Sanoid.Schema.SanoidMonitoringSchemaJson.Undefined;
            }
        }
    }
}