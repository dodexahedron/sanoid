.\" Automatically generated by Pandoc 2.17.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Sanoid.json" "5" "June 2023" "Sanoid.net 1.0.0-Beta1 Configuration" ""
.hy
.SH Name
.PP
Sanoid.json - Configuration files for Sanoid.net
.SH Synopsis
.PP
\f[B]/usr/local/share/Sanoid.net/Sanoid.json\f[R] (Sanoid.json)
.PD 0
.P
.PD
\f[B]/etc/sanoid/Sanoid.local.json\f[R] (Sanoid.local.json)
.SH Description
.PP
These files contain general configuration and templates for Sanoid.net.
.PP
All configuration files are formatted as plain-text JSON files, in UTF-8
encoding.
.PP
Note: Command line arguments which affect settings in any configuration
file have highest precedence and will override their matching settings,
at run-time.
.PD 0
.P
.PD
See Sanoid.net(8) for details on command line arguments.
.SS Configuration Files
.PP
\f[B]/usr/local/share/Sanoid.net/Sanoid.json\f[R] is the base
configuration file and is not intended, recommended, or supported to be
changed by the end user.
.PD 0
.P
.PD
This file is installed with read-only permissions, by default, to help
avoid unintended modifications.
.PP
\f[B]/etc/sanoid/Sanoid.local.json\f[R] is the local configuration file.
.PD 0
.P
.PD
All settings specified in this file extend the configuration contained
in Sanoid.json.
Any leaf-level settings in Sanoid.local.json that have the same
fully-qualified JSON path as leaf-level settings defined in Sanoid.json
will override the matching settings in Sanoid.json, at run-time.
.SS Configuration File Schemas
.PP
The schemas for Sanoid.json and Sanoid.local.json are identical, except
for required elements.
Both can be found in /usr/local/share/Sanoid.net as Sanoid.schema.json
and Sanoid.local.schema.json.
.PD 0
.P
.PD
The schema documents fully describe the layout and legal format for
these configuration files, and are to be considered authoritative, if
any discrepancies exist between this document and those files.
.PP
Changes to the schema documents are NOT supported and are likely to
cause run-time errors in Sanoid.net.
DO NOT MODIFY THE SCHEMA DOCUMENTS.
.SH Settings
.PP
Settings are described below using their JSON path as identifiers, and a
description including type, default value, and what each settings does.
.SS General Settings
.PP
These are general settings that affect the behavior of Sanoid.net.
.PD 0
.P
.PD
They can be overridden by command-line arguments, as noted.
.TP
\f[B]/DryRun\f[R] (boolean - \[lq]true\[rq] or \[lq]false\[rq])
This is a global setting that controls whether Sanoid.net will perform a
dry run, when invoked.
If this setting is \[lq]true,\[rq] Sanoid.net will perform a dry run and
make no changes to ZFS.
The command-line option \f[B]--dry-run\f[R] overrides this setting.
.TP
\f[B]/TakeSnapshots\f[R] (boolean - \[lq]true\[rq] or \[lq]false\[rq])
This is a global setting that controls whether Sanoid.net will take new
snapshots.
If this setting is true, Sanoid.net will take snapshots according to the
properties set on each ZFS dataset.
If this setting is false, new snapshot processing is skipped and no new
snapshots will be taken, regardless of the sanoid.net:takesnapshots
property set on each ZFS dataset.
The command-line options \f[B]--take-snapshots\f[R] and
\f[B]--no-take-snapshots\f[R] override this setting.
.TP
\f[B]/PruneSnapshots\f[R] (boolean - \[lq]true\[rq] or \[lq]false\[rq])
This is a global setting that controls whether Sanoid.net will prune
expired snapshots.
If this setting is true, Sanoid.net will prune eligible snapshots
according to the properties set on each snapshot or inherited from its
parent dataset.
If this setting is false, existing snapshots will not be pruned,
regardless of the sanoid.net:prunesnapshots property setting on each ZFS
dataset, the retention properties on each ZFS dataset or snapshot, or
the age of the snapshot.
The command-line options \f[B]--prune-snapshots\f[R] and
\f[B]--no-prune-snapshots\f[R] override this setting.
.SS Templates
.PP
Templates, which provide common timing and formatting settings for
snapshots, are defined under the \f[B]/Templates\f[R] node, which is a
dcitionary of key:value pairs, where the key is the template\[cq]s name,
as a quoted string, and the value is the template itself, as a JSON
object, with a schema defined in Sanoid.template.schema.json.
.PP
For a template to be valid for use, it must be fully defined, with all
options explicitly set.
As with other configuration elements, it is possible to configure
templates manually, in the json files, but it is \f[B]strongly\f[R]
recommended that you use the configuration console to do so, instead, as
it will ensure your templates are fully and properly defined, and will
prevent you from deleting templates that are in use by any datasets in
ZFS.
.PP
A template is a JSON object consisting of two sections:
\[lq]Formatting\[rq] and \[lq]SnapshotTiming\[rq]
.SS Template Formatting Section
.PP
The \f[B]Formatting\f[R] section of a template defines elements used for
naming of new snapshots that Sanoid.net creates.
The default Formatting options provided in the \[lq]default\[rq]
template, on a new install, will result in snapshot names that follow
the same format that PERL sanoid creates.
For example, a daily snapshot taken on 2023-06-22 at 14:00:00 (local
time) will be named
\[lq]path/to/dataset\[at]\f[B]autosnap_2023-06-22_14:00:00_daily\f[R]\[rq].
.PP
These settings do not affect operation of Sanoid.net in any way
\f[I]other\f[R] than in how it will name snapshots created on datasets
with that template applied.
.PP
Pruning of existing snapshots is in no way affected by these settings,
as Sanoid.net keeps metadata defining what a snapshot \f[I]is\f[R] in
ZFS properties, which are not affected by these settings.
.PP
If you use a heterogeneous setup combining both PERL sanoid and
Sanoid.net, you MUST use Formatting settings that correspond identically
to PERL sanoid\[cq]s configuration, or else PERL sanoid will
misinterpret or skip them entirely, as PERL sanoid decides what a
snapshot is and what to do with it based solely off of its name.
.PP
Note that all settings must conform to ZFS identifier rules, as they
apply to naming of snapshots.
Thus, only 7-bit ASCII characters in restricted ranges are supported.
The configuration console helps enforce these restrictions.
See zfs(8) for specifics.
.TP
\f[B]/Templates/templateName/Formatting/ComponentSeparator\f[R]
This is a single character used to separate each component of a
snapshot\[cq]s name.
By default, it is the underscore (_) character.
.TP
\f[B]/Templates/templateName/Formatting/Prefix\f[R]
The prefix is the first component of a snapshot name, appearing
immediately after the \[at] symbol.
It should be a 1-12 character alphanumeric string and is case-sensitive.
By default, it is the string \[lq]autosnap\[rq]
.TP
\f[B]/Templates/templateName/Formatting/TimestampFormatString\f[R]
The Timestamp Format String is a special format string that determines
how the timestamp is formatted in the name of a snapshot.
Sanoid.net uses the .net DateTimeOffset type, internally, for
representation of time, which contains the full date, time, and timezone
offset (in local time, by default) that the operation was executed at.
This string must be escaped, following both JSON and C# rules (which are
mostly the same).
The default string is \[lq]yyyy-MM-dd_HH\[rs]:mm\[rs]:ss\[rq], which
results in output as shown in the example given above.
Other format strings are allowed, but they must adhere to ZFS snapshot
identifier requirements and must be valid .net DateTimeOffset format
specifier strings.
Documentation of valid format strings can be found at
https://learn.microsoft.com/en-us/dotnet/standard/base-types/standard-date-and-time-format-strings
.TP
\f[B]/Templates/templateName/Formatting/FrequentSuffix\f[R]
The Frequent Suffix is the string used as the final portion of a
snapshot name, when that snapshot\[cq]s period is \[lq]frequent.\[rq] It
should be a 1-12 character alphanumeric string and is case-sensitive.
By default, it is the string \[lq]frequently\[rq]
.TP
\f[B]/Templates/templateName/Formatting/HourlySuffix\f[R]
The Hourly Suffix is the string used as the final portion of a snapshot
name, when that snapshot\[cq]s period is \[lq]hourly.\[rq] It should be
a 1-12 character alphanumeric string and is case-sensitive.
By default, it is the string \[lq]hourly\[rq]
.TP
\f[B]/Templates/templateName/Formatting/DailySuffix\f[R]
The Daily Suffix is the string used as the final portion of a snapshot
name, when that snapshot\[cq]s period is \[lq]daily.\[rq] It should be a
1-12 character alphanumeric string and is case-sensitive.
By default, it is the string \[lq]daily\[rq]
.TP
\f[B]/Templates/templateName/Formatting/WeeklySuffix\f[R]
The Weekly Suffix is the string used as the final portion of a snapshot
name, when that snapshot\[cq]s period is \[lq]weekly.\[rq] It should be
a 1-12 character alphanumeric string and is case-sensitive.
By default, it is the string \[lq]weekly\[rq]
.TP
\f[B]/Templates/templateName/Formatting/MonthlySuffix\f[R]
The Monthly Suffix is the string used as the final portion of a snapshot
name, when that snapshot\[cq]s period is \[lq]monthly.\[rq] It should be
a 1-12 character alphanumeric string and is case-sensitive.
By default, it is the string \[lq]monthly\[rq]
.TP
\f[B]/Templates/templateName/Formatting/YearlySuffix\f[R]
The Yearly Suffix is the string used as the final portion of a snapshot
name, when that snapshot\[cq]s period is \[lq]yearly.\[rq] It should be
a 1-12 character alphanumeric string and is case-sensitive.
By default, it is the string \[lq]yearly\[rq]
.SH AUTHORS
Brandon Thetford.
